@using TerranForum.Domain.Models
@using Microsoft.AspNetCore.Identity
@using TerranForum.Application.Services
@using System.ComponentModel.DataAnnotations
@using TerranForum.Domain.Enums
@model PostViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string getUpvoteFill()
    {
        return Model.CurrentUserRating > 0 ?
            "\"FILL\" 1" : "\"FILL\" 0";
    }

    string getDownvoteFill()
    {
        return Model.CurrentUserRating < 0 ?
            "\"FILL\" 1" : "\"FILL\" 0";
    }
}

@foreach (var paragraph in Model.Content.Split("\r\n\r\n"))
{
    <p>@paragraph</p>
}
@if (UserManager.GetUserId(User) == Model.UserId || User.IsInRole(Roles.Admin))
{
    <div class="container" id="managePost" postId="@Model.Id" forumId="@Model.ForumId">
        @if (!User.IsInRole(Roles.Admin))
        {
            @if (!Model.IsMaster)
            {    
                <a asp-controller="Post" asp-action="Edit" asp-route-postId="@Model.Id" class="secondary-anchor">Edit</a>
            }
            else
            {
                <a asp-controller="Forum" asp-action="Edit" asp-route-forumId="@Model.ForumId" class="secondary-anchor">Edit</a>
            }
        }
        <a asp-controller="Post" asp-action="GetPostDeleteView" class="danger-anchor" id="deleteBtn">Delete</a>
    </div>
}
<div class="d-flex pb-4 mt-4">
    <div class="d-flex align-items-center button-shell" style="width: 6em;" postId="@Model.Id" id="ratingModifyContainer">
        @if (SignInManager.IsSignedIn(User))
        {
            <a class="px-2 d-flex replyAchor"
                id="like"
                asp-controller="Post"
                asp-action="UpdateRating">
                <span class="material-symbols-outlined align-self-center"
                      style="font-variation-settings: @getUpvoteFill(), 'opsz' 48, 'GRAD' -25">
                    shift
                </span>
            </a>
            <div class="px-1">@Model.Rating</div>
            <a class="px-2 d-flex replyAchor"
                id="dislike"
                asp-controller="Post"
                asp-action="UpdateRating">
                <span class="material-symbols-outlined align-self-center"
                    style="transform: rotate(180deg);
                    font-variation-settings: @getDownvoteFill(), 'opsz' 48, 'GRAD' -25">
                    shift
                </span>
            </a>
        }
        else
        {
            <a class="px-2 d-flex replyAchor"
               asp-area="Identity"
               asp-page="/Account/Login">
                <span class="material-symbols-outlined align-self-center">
                    shift
                </span>
           </a>
            <div class="px-1">@Model.Rating</div>
            <a class="px-2 d-flex replyAchor"
               asp-area="Identity" 
               asp-page="/Account/Login">
                <span class="material-symbols-outlined align-self-center"
                      style="transform: rotate(180deg);">
                    shift
                </span>
           </a>
        }
    </div>
    <div class="d-flex ms-auto align-items-center">
        @Model.CreatorUserName
    </div>
</div>
<hr />
<div class="container">
    @foreach (var reply in Model.Replies)
    {
        await Html.RenderPartialAsync(
            "~/Views/PostReply/_ViewPartial.cshtml",
            reply);
    }
    <div id="createReply">
        @if (SignInManager.IsSignedIn(User))
        {
            <a class="secondary-anchor" 
                asp-controller="Post" 
                asp-action="GetCreatePostReplyView" 
                postId="@Model.Id" 
                forumId="@Model.ForumId" 
                id="addReply">Add Comment</a>
        }
        else
        {
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Add Comment</a>
        }
    </div>
</div>
